{"version":3,"sources":["CalorieDeficit.js","NextPage.js","BodyWight.js","Options.js","LoadButton.js","Exercise.js","Activity.js","Distribution.js","Nutrition.js","SignIn.js","SignUp.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["CalorieDeficit","onSendOption","className","type","id","value","name","onClick","htmlFor","NextPage","onRouteChange","BodyWeight","onInputChange","onBMRCalculate","bmr","aria-describedby","onChange","Options","optionCheckedState","checked","LoadButton","onLoadOptions","Exercise","calculateNutrition","map","item","index","key","Activity","Distribution","amountA","amountE","protein","oil","activity","exercise","dailyCalorie","dailyCarbon","Nutrition","email","deficit","SignIn","props","onEmailChange","event","setStateFun","target","onPasswordChange","state","this","Component","SignUp","onNameChange","Navigation","isSign","data-icon","viewBox","style","fill","d","initialchecked","initialState","password","weight","BMR","isSignIn","route","checkedActivity","checkedExercise","App","stateName","stateValue","setState","parseInt","window","scrollTo","slice","includes","activityArr","changedChecked","exerciseArr","activityDatabase","exerciseDatabase","forLoop","database","oneWeekArr","i","oneDayArr","push","renderSwitch","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b3ed0963.chunk.js","sourcesContent":["import React from 'react';\n\nconst CalorieDeficit = ({onSendOption}) => {\n    return (\n      <div >\n        <legend className=\"fw7 f4 pb3\">your calorie deficit per day this week</legend>\n        <div className=\"flex items-center mb2\">\n          <input \n          className=\"mr2\" type=\"radio\" id=\"300\" value=\"300\" name=\"deficit\"\n          onClick={onSendOption}\n          />\n          <label htmlFor=\"300\" className=\"lh-copy\">300</label>\n        </div>\n        <div className=\"flex items-center mb2\">\n          <input \n          className=\"mr2\" type=\"radio\" id=\"400\" value=\"400\" name=\"deficit\"\n          onClick={onSendOption}\n          />\n          <label htmlFor=\"400\" className=\"lh-copy\">400</label>\n        </div>\n        <div className=\"flex items-center mb2\">\n          <input \n          className=\"mr2\" type=\"radio\" id=\"500\" value=\"500\" name=\"deficit\"\n          onClick={onSendOption}\n          />\n          <label htmlFor=\"500\" className=\"lh-copy\">500</label>\n        </div>\n      </div>\n    )\n}\n\nexport default CalorieDeficit;","import React from 'react';\n\nconst NextPage = ({onRouteChange}) => {\n    return(\n        <div className=\"pv2\">\n            <input \n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n            type=\"submit\" \n            value=\"next page\"\n            onClick={onRouteChange}\n            />\n        </div>\n    )\n}\n\nexport default NextPage;","import React from 'react';\nimport CalorieDeficit from './CalorieDeficit';\nimport NextPage from './NextPage';\n\nconst BodyWeight = ({onInputChange, onBMRCalculate, bmr, onRouteChange, onSendOption}) => {\n    return(\n      <div className=\"pa4 black-80\">\n        <div className=\"measure\">\n          <label htmlFor=\"name\" className=\"f6 b db mb2\">Body Weight \n            <span className=\"normal black-60\"> kg</span>\n          </label>\n          <input id=\"weight\" \n          className=\"input-reset ba b--black-60 pa2 mb2 db w-30\" \n          type=\"text\" \n          aria-describedby=\"name-desc\"\n          onChange={onInputChange}\n          />\n          <small id=\"name-desc\" className=\"f6 black-60 db mb2\">enter your body weight here</small>\n        </div>\n\n        <div className=\"\">\n          <input \n          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n          type=\"submit\" \n          value=\"submit\"\n          onClick={onBMRCalculate}\n          />\n        </div>\n        <p>Your BMR (Basal Metabolic Rate) is <span>{bmr}</span> Kcal.</p>\n        <CalorieDeficit\n          onSendOption={onSendOption}\n        />\n        <NextPage\n          onRouteChange={()=> {onRouteChange('activity')}}\n        />\n      </div>\n    )\n}\n\nexport default BodyWeight;","import React from 'react';\n\nconst Options = ({name, onSendOption, optionCheckedState}) => {\n  // The for attribute of <label> must be equal to the id attribute of the related element \n\n  return(\n        <div>\n            <div className=\"flex items-center mb2\">\n              <input \n              className=\"mr2\" type=\"radio\" id={`${name}-rare`} value=\"0\" name={name}\n              onChange={onSendOption} // use onChange istead of onClick to meet the checked's need\n              checked={optionCheckedState[0]}\n              />\n              <label htmlFor={`${name}-rare`} className=\"lh-copy\">Rare</label>\n            </div>\n            <div className=\"flex items-center mb2\">\n              <input \n              className=\"mr2\" type=\"radio\" id={`${name}-low`} value=\"1\" name={name}\n              onChange={onSendOption}\n              checked={optionCheckedState[1]}\n              />\n              <label htmlFor={`${name}-low`} className=\"lh-copy\">Low</label>\n            </div>\n            <div className=\"flex items-center mb2\">\n              <input \n              className=\"mr2\" type=\"radio\" id={`${name}-medium`} value=\"2\" name={name}\n              onChange={onSendOption}\n              checked={optionCheckedState[2]}\n              />\n              <label htmlFor={`${name}-medium`} className=\"lh-copy\">Medium</label>\n            </div>\n            <div className=\"flex items-center mb2\">\n              <input \n              className=\"mr2\" type=\"radio\" id={`${name}-high`} value=\"3\" name={name}\n              onChange={onSendOption}\n              checked={optionCheckedState[3]}\n              />\n              <label htmlFor={`${name}-high`} className=\"lh-copy\">High</label>\n            </div>\n        </div>\n    )\n}\n\nexport default Options; ","import React from 'react';\n\n\nconst LoadButton = ({onLoadOptions}) => {\n    return(\n        <div className=\"pb1\">\n            <input \n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n            type=\"submit\" value=\"Load setting of last week\"\n            onClick={onLoadOptions}\n            />\n        </div>\n    )\n}\n\nexport default LoadButton;","import React from 'react';\nimport Options from './Options';\nimport LoadButton from './LoadButton';\nimport NextPage from './NextPage';\n\nconst Exercise = ({onRouteChange, onSendOption, calculateNutrition, onLoadOptions, optionCheckedState}) => {\n    const dayArr = ['1', '2', '3', '4', '5', '6', '7']; \n    return (\n        <div>\n            <fieldset id=\"\" className=\"bn\">\n                <legend className=\"fw7 f4 pv3\">choose your amount of exercise this week</legend>\n                <LoadButton\n                    onLoadOptions={onLoadOptions}\n                />\n                <div className=\"\">\n                    <dl className=\"f5 lh-title mv2\">\n                        <dt className=\"dib b pb1\">Low:</dt><br/>\n                        <dd className=\"dib ml0 near-gray\">less than 12 sets workout</dd><br/>\n                        <dd className=\"dib ml0 near-gray\">less than 0.5hr cardio</dd><br/>\n                        <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd><br/>\n                    </dl>\n                    <dl className=\"f5 lh-title mv2\">\n                        <dt className=\"dib b pb1\">Middle:</dt><br/>\n                        <dd className=\"dib ml0 near-gray\">15-20 sets workout</dd><br/>\n                        <dd className=\"dib ml0 near-gray\">1hr cardio.</dd><br/>\n                        <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd><br/>\n                    </dl>\n                    <dl className=\"f5 lh-title mv2\">\n                        <dt className=\"dib b pb1\">High:</dt><br/>\n                        <dd className=\"dib ml0 near-gray\">25 sets workout</dd><br/>\n                        <dd className=\"dib ml0 near-gray\">more than 1.5hr cardio</dd><br/>\n                        <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd><br/>\n                    </dl>\n                </div>\n\n                <div>\n                    {\n                        dayArr.map((item, index) => {\n                            return (\n                                <div key={item}>\n                                    <h4>Day {item}</h4>\n                                    <Options \n                                        name={`exercise${item}`}\n                                        onSendOption={onSendOption}\n                                        optionCheckedState={optionCheckedState[index]}\n                                    />\n                                    {/* optionCheckedState: {optionCheckedState[index].toString()} */}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <NextPage\n                // call two functions in onClick\n                onRouteChange={()=> {onRouteChange('nutrition'); calculateNutrition()} }\n                />\n            </fieldset>\n        </div>\n    )\n}\n\n\nexport default Exercise;","import React from 'react';\nimport Options from './Options';\nimport LoadButton from './LoadButton';\nimport NextPage from './NextPage';\n\n\n// onLoadOptions的參數竟然不用在最底層的onClick帶入！！\nconst Activity = ({onRouteChange, onSendOption, onLoadOptions, optionCheckedState}) => {\n    const dayArr = ['1', '2', '3', '4', '5', '6', '7']; \n    return( \n        <div> \n            <fieldset id=\"\" className=\"bn\">\n                <legend className=\"fw7 f4 pv3\">choose your amount of activity per day this week</legend>      \n                <LoadButton\n                onLoadOptions={onLoadOptions}\n                />\n                <div className=\"\">\n                    <dl className=\"f5 lh-title mv2\">\n                      <dt className=\"dib b pb1\">Low:</dt><br/>\n                      <dd className=\"dib ml0 near-gray\">6,000 steps</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">30mins mounting/climbing stairs</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">1hr walking, house cleaning/biking</dd><br/>\n                      <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd>\n                    </dl>\n                    <dl className=\"f5 lh-title mv2\">\n                      <dt className=\"dib b pb1\">Middle:</dt><br/>\n                      <dd className=\"dib ml0 near-gray\">10,000 steps</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">1hr mounting/climbing stairs</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">2hr walking, house cleaning/biking</dd><br/>\n                      <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd>\n\n\n                    </dl>\n                    <dl className=\"f5 lh-title mv2\">\n                      <dt className=\"dib b pb1\">High:</dt><br/>\n                      <dd className=\"dib ml0 near-gray\">20,000 steps</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">2hr mounting/climbing stairs</dd><br/>\n                      <dd className=\"dib ml0 near-gray\">3hr walking house cleaning/biking</dd><br/>\n                      <dd className=\"f6 dib ml0 mid-gray\">(one of these)</dd>\n                    </dl>\n                </div>\n{/* 在map裡面如果用optionState加[0]: TypeError: Cannot read property '1' of undefined (OPTIONS) */} \n{/* 在options裡面加index, 與map裡面加index，只能擇一，否則出錯*/}\n                <div>\n                     {\n                        dayArr.map((item, index) => {\n                            return( \n                                 <div key={item}> \n                                    <h4>Day {item}</h4>\n                                    <Options\n                                        name={`activity${item}`}\n                                        onSendOption={onSendOption}\n                                        optionCheckedState={optionCheckedState[index]}\n                                    />\n                                    {/* <div>optionCheckedState:  {optionCheckedState[index].toString()}</div> */}\n                                 </div> \n                             )\n                        })\n                    }   \n                </div>\n                <NextPage\n                onRouteChange={()=> {onRouteChange('exercise')}}\n                />\n            </fieldset>\n        </div>\n    )\n}\n\n\nexport default Activity;","import React from 'react';\n\nconst Distribution = ({ item, protein, oil, activity, exercise, dailyCalorie, dailyCarbon }) => {\n    let amountA, amountE;\n// show activity and exercise here, turn number to string\n    if(activity[item-1] === '0') {\n        amountA = 'Rare';\n    }else if (activity[item-1] === '1'){\n        amountA = 'Low';\n    }else if(activity[item-1] === '2'){\n        amountA = 'Medium';\n    }else{\n        amountA = 'High';\n    }  \n    \n    if(exercise[item-1] === '0') {\n        amountE = 'Rare';\n    }else if (exercise[item-1] === '1'){\n        amountE = 'Low';\n    }else if(exercise[item-1] === '2'){\n        amountE = 'Medium';\n    }else{\n        amountE = 'High';\n    }\n    \n    return (    \n        <div>\n            <h3 className=\"\">Day {item}</h3>\n            <h4>{amountA} activity, {amountE} exercise.</h4>\n            <div className=\"\">\n                <dl className=\"f5 lh-title mv2\">\n                    <dt className=\"dib b\">Protein:</dt>\n                    <dd className=\"dib ml1 near-gray\">{protein} g</dd>\n                </dl>\n                <dl className=\"f5 lh-title mv2\">\n                    <dt className=\"dib b\">Oil:</dt>\n                    <dd className=\"dib ml1 near-gray\">{oil} g</dd>\n                </dl>\n                <dl className=\"f5 lh-title mv2\">\n                    <dt className=\"dib b\">Carbohydrate:</dt>\n                    <dd className=\"dib ml1 near-gray\">{dailyCarbon[item-1]} g</dd>\n                </dl>\n                <dl className=\"f5 lh-title mv2\">\n                    <dt className=\"dib b\">Total calorie: </dt>\n                    <dd className=\"dib ml1 near-gray\">{dailyCalorie[item-1]} Kcal</dd>\n                </dl>   \n            </div>      \n        </div>\n    )\n}\n\nexport default Distribution;","import React from 'react';\nimport Distribution from './Distribution';\n\nconst Nutrition = ({ email, onRouteChange, deficit, protein, oil, activity, exercise, dailyCalorie, dailyCarbon }) => {\n    const dayArr = ['1', '2', '3', '4', '5', '6', '7']; \n    return(\n        <div>\n            <fieldset id=\"\" className=\"bn\">\n                <legend className=\"fw7 f4 pt3\">{email}, your daily recommended intakes are:</legend>\n                <p className=\"pt0 pb2\">Deficit : {deficit} Kcal</p>\n                {\n                    dayArr.map(item => {\n                        return (\n                            <Distribution\n                            key = {item}\n                            item = {item}\n                            protein = {protein}\n                            oil = {oil}\n                            activity = {activity}\n                            exercise = {exercise}\n                            dailyCalorie = {dailyCalorie}\n                            dailyCarbon = {dailyCarbon}\n                            />    \n                        )\n                  })\n                }\n                <div className=\"pv2\">\n                    <input \n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                    type=\"submit\" \n                    value=\"Sign out\"\n                    onClick={() => {onRouteChange('signin')}}\n                    />\n                </div> \n            </fieldset>\n        </div>\n    )\n}\n\nexport default Nutrition;","import React, { Component } from 'react';\n\nclass SignIn extends Component{\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n\n    onEmailChange = (event) => {\n        this.props.setStateFun('email', event.target.value)\n    }\n\n    onPasswordChange = (event) => {\n        this.props.setStateFun('password', event.target.value)\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"pa4 black-80\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                               <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                               <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" name=\"email-address\"  id=\"email-address\"\n                                onChange={this.onEmailChange}\n                               />\n                            </div>\n                            <div className=\"mv3\">\n                              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                              <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" name=\"password\"  id=\"password\"\n                                onChange={this.onPasswordChange}\n                              />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input \n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                            type=\"submit\" \n                            value=\"Sign in\"\n                            onClick={()=> {this.props.onRouteChange(\"weight\")}}\n                            />\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p \n                            className=\"f6 link dim black db\"\n                            onClick={()=> {this.props.onRouteChange(\"signup\")}}>Sign up</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\n\nclass SignUp extends Component{\n    constructor(){\n        super();\n        this.state = {}\n    }\n\n    onNameChange = (event) => {\n        this.props.setStateFun('Name', event.target.value)\n    }\n\n    onEmailChange = (event) => {\n        this.props.setStateFun('email', event.target.value)\n    }\n\n    onPasswordChange = (event) => {\n        this.props.setStateFun('password', event.target.value)\n    }\n\n    render(){\n        return(\n            <div>\n                <div className=\"pa4 black-80\">\n                    <div className=\"measure center\">\n                        <fieldset id=\"sign_in\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f4 fw6 ph0 mh0\">Sign Up</legend>\n                            <div className=\"mt3\">\n                               <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                               <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-50\" \n                                type=\"name\" name=\"name\"  id=\"name\"\n                                onChange={this.onNameChange}\n                               />\n                            </div>\n                            <div className=\"mt3\">\n                               <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                               <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" name=\"email-address\"  id=\"email-address\"\n                                onChange={this.onEmailChange}\n                               />\n                            </div>\n                            <div className=\"mv3\">\n                              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                              <input \n                               className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                               type=\"password\" name=\"password\"  id=\"password\"\n                               onChange={this.onPasswordChange}\n                               />\n                            </div>\n                        </fieldset>\n                        <div className=\"\">\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                            type=\"submit\" value=\"Sign up\"/>\n                        </div>\n                        <div className=\"lh-copy mt3\">\n                            <p \n                            className=\"f6 link dim black db\"\n                            onClick={()=> {this.props.onRouteChange(\"signin\")}}>Sign in</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React from 'react';\n\nconst Navigation = ({ isSign, email, onRouteChange }) => {\n  return(\n        <div>\n            <nav className=\"flex justify-between bb b--white-10 bg-near-black\">\n              <div className=\"link white-70 hover-white no-underline flex items-center pa3\" >\n                <svg\n                  className=\"dib h1 w1\"\n                  data-icon=\"grid\"\n                  viewBox=\"0 0 32 32\"\n                  style={{fill:\"currentcolor\"}}>\n                  <title>Super Normal Icon Mark</title>\n                  <path \n                  d=\"M2 2 L10 2 L10 10 L2 10z M12 2 L20 2 L20 10 L12 10z M22 2 L30 2 L30 10 L22 10z M2 12 L10 12 L10 20 L2 20z M12 12 L20 12 L20 20 L12 20z M22 12 L30 12 L30 20 L22 20z M2 22 L10 22 L10 30 L2 30z M12 22 L20 22 L20 30 L12 30z M22 22 L30 22 L30 30 L22 30z\">\n                  </path>\n                </svg>\n              </div>\n              <div className=\"flex-grow pa3 flex items-center\">            \n                {/* <div \n                className=\"f6 link dib white dim mr3 mr4-ns\" >About</div> */}\n                {\n                  isSign === false ? \n\n                  <div>\n\n                    <div \n                    className=\"f6 link dib white dim mr3 mr4-ns\" \n                    onClick={()=> {onRouteChange(\"signin\")}}>Sign In</div>\n                    <div \n                    // className=\"f6 dib white bg-animate hover-bg-white hover-black no-underline pv2 ph4 br-pill ba b--white-20\"\n                    className=\"f6 link dib white dim mr3 mr4-ns\" \n                    onClick={()=> {onRouteChange(\"signup\")}}>Sign Up</div>\n\n                  </div>\n\n                  : \n\n                  <div>\n\n                    <div \n                    className=\"f6 link dib white dim mr3 mr4-ns\" \n                    >Hi! {email}</div>\n                    <div \n                    className=\"f6 link dib white dim mr3 mr4-ns\" \n                    onClick={()=> {onRouteChange(\"signin\")}}>Sign Out</div>\n\n                  </div>\n\n                }\n              </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navigation;","import React, { Component } from 'react';\nimport BodyWeight from './BodyWight';\nimport Exercise from './Exercise';\nimport Activity from './Activity';\nimport Nutrition from './Nutrition';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport './App.css';\nimport Navigation from './Navigation';\n// import { act } from 'react-dom/test-utils';\n\n\nconst initialchecked = \n[[false, false, false, false],[false, false, false, false],[false, false, false, false],\n[false, false, false, false],[false, false, false, false],[false, false, false, false],\n[false, false, false, false]];\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n\n  weight : 0,\n  BMR : 0,\n  isSignIn : false,\n  route: 'signin', // sign in, sign up, weight, activity, exercise, nutrition\n\n  deficit : 0,\n  activity : [], // store week activity, like: ['0', '1', '0', '1', '0', '3', '2']\n  exercise : [], // store week exercise, like: ['0', '1', '0', '1', '0', '3', '2']\n  \n  protein : 0,\n  oil : 0,\n  dailyCalorie : [], // 7 days daily calorie\n  dailyCarbon : [], // 7 days daily carbohydrate\n\n  checkedActivity : initialchecked,\n  checkedExercise : initialchecked,\n  // the default of checked attribute of options\n}\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = initialState;\n  }\n\n  setStateFun = (stateName, stateValue) => {\n    this.setState({[stateName] : stateValue})\n  }\n\n  // get body weight\n  onInputChange = (event) => {\n    this.setState({weight: event.target.value});\n  }\n\n  // calculate BMR\n  onBMRCalculate = () =>{\n    const bmr = parseInt(this.state.weight*2.2*12);\n    this.setState({BMR : bmr});\n  } \n  \n  // set route:  \n  onRouteChange = (route) => {\n    if(route === 'signin'){\n      this.setState(initialState)\n    }\n    else if(route === 'weight'){\n      this.setState({isSignIn : true})\n    }\n    this.setState({route : route});\n    window.scrollTo(0, 0); //scroll page to top \n  }\n\n  // 把原本的onClick改為onChange，按下之後，要把同一組其他的default設為false，再把自己的設為true\n  // onclick, save options to state\n  onSendOption = (event) => {\n    // if the returned name includes activity, then setState activity\n    const index = (event.target.name).slice(-1); // get the latest letter of \"activity1\"\n    \n    if(event.target.name.includes('activity')){\n      // save option value to activity state\n      let activityArr = this.state.activity.slice(); // use slice() to ensure we create a seperate copy of this.state.activity\n      activityArr[index-1] = event.target.value; // save one option to the certain index of element\n      this.setState({activity : activityArr})\n\n      // modify checked state. 1: set 4 options to false, 2: set the one to true\n      let changedChecked = this.state.checkedActivity.slice(); //只有要改那一組option，不能複製整個initial\n      changedChecked[index-1] = [false, false, false, false];\n      changedChecked[index-1][event.target.value] = true;\n      this.setState({checkedActivity : changedChecked})\n\n    }\n    // exercise part\n    else if(event.target.name.includes('exercise')){\n      // save option value to state\n      let exerciseArr = this.state.exercise.slice(); // a new exercise state array\n      exerciseArr[index-1] = event.target.value;\n      this.setState({exercise : exerciseArr});\n\n      // modify checked state. \n      let changedChecked = this.state.checkedExercise.slice(); \n      changedChecked[index-1] = [false, false, false, false];\n      changedChecked[index-1][event.target.value] = true;\n      this.setState({checkedExercise : changedChecked})      \n\n    }\n    // Calorie deficit part: 300/400/500\n    else{\n      this.setState({deficit : event.target.value})\n    }  \n  }\n\n  // load activity and exercise settings of last week\n  onLoadOptions = () => {\n    // imaginary database\n    let activityDatabase = ['0', '1', '0', '1', '0', '3', '2'];\n    let exerciseDatabase = ['1', '1', '0', '2', '0', '2', '1'];\n\n    // call forLoop function, set checked state and activity, exercise state\n    if(this.state.route === 'activity'){\n      this.setState({\n        checkedActivity : this.forLoop(activityDatabase),\n        activity : activityDatabase\n      })    \n    }\n    else if(this.state.route === 'exercise'){\n      this.setState({\n        checkedExercise : this.forLoop(exerciseDatabase),\n        exercise : exerciseDatabase\n      })\n    }\n  }\n\n  // give the default false array, and set one of it (depends on database) to true\n  // then return a 7 days 2-dimentional array\n  forLoop = (database) => {\n    let oneWeekArr = [];\n    for(let i=0; i<7; i++){\n      let oneDayArr = [false, false, false, false];\n      oneDayArr[database[i]] = true;\n      oneWeekArr.push(oneDayArr);\n    }\n    return oneWeekArr;\n  }\n\n  // do calculation and save to state\n  calculateNutrition = () => {\n    const {weight, deficit, activity, exercise} = this.state; \n    const protein = weight * 2; // protein fixes to 2 time weight\n    const oil = weight * 1; // oil fixes to 1 time weight\n\n    let dailyCalorie = [];\n    let dailyCarbon = [];\n\n    // calculate day1-7\n    for(let i=0; i<7; i++){\n      // total calorie of that day\n      dailyCalorie[i] = parseInt(weight * 2.2 * (12 + parseInt(activity[i]) + parseInt(exercise[i])))-deficit;\n      // carbohydrate of thar day\n      dailyCarbon[i] = parseInt((dailyCalorie[i] - protein * 4 - oil * 9) / 4);\n\n    }\n    // save these numbers\n    this.setState({\n      protein : protein,\n      oil : oil,\n      dailyCalorie : dailyCalorie,\n      dailyCarbon : dailyCarbon    // \"let\" variable has a different color \n    })\n  }\n\n  // decide render components\n  renderSwitch = (route) => {\n    switch (route){\n      case 'signin':\n        return <SignIn\n                onRouteChange={this.onRouteChange}\n                setStateFun={this.setStateFun}/>\n      case 'signup':\n        return <SignUp\n                onRouteChange={this.onRouteChange}\n                setStateFun={this.setStateFun}\n                />\n\n      case 'weight':\n        return <BodyWeight\n                onInputChange = {this.onInputChange}\n                onBMRCalculate = {this.onBMRCalculate}\n                bmr = {this.state.BMR}\n                onRouteChange = {this.onRouteChange} \n                onSendOption = {this.onSendOption} \n                />\n\n      case 'activity':\n        return <Activity\n                onRouteChange = {this.onRouteChange}  \n                onSendOption = {this.onSendOption}\n                onChange={this.onChange}\n                onLoadOptions = {this.onLoadOptions}  \n                optionCheckedState = {this.state.checkedActivity}\n                />\n\n      case 'exercise':\n        return <Exercise\n                onRouteChange = {this.onRouteChange}  \n                onSendOption = {this.onSendOption}\n                calculateNutrition = {this.calculateNutrition}\n                onLoadOptions = {this.onLoadOptions}  \n                optionCheckedState = {this.state.checkedExercise}\n                />\n      case 'nutrition':\n        return <Nutrition\n                email = {this.state.email}\n                onRouteChange = {this.onRouteChange}\n                weight = {this.state.weight}\n                deficit = {this.state.deficit}\n                protein = {this.state.protein}\n                oil = {this.state.oil}\n                activity = {this.state.activity}\n                exercise = {this.state.exercise}\n                dailyCalorie = {this.state.dailyCalorie}\n                dailyCarbon = {this.state.dailyCarbon}\n                />\n      \n      default:\n        return \n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <Navigation\n        email = {this.state.email}\n        onRouteChange = {this.onRouteChange}\n        isSign = {this.state.isSignIn} \n        />\n        <div className=\"pl3 pl5-ns mw6-ns\">\n          {this.renderSwitch(this.state.route)}\n        </div>\n\n      </div>\n\n    )\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}